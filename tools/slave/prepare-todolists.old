#!/bin/bash
# ---------------------------------------------------------------------------
#
# Usage: . prepare-todolists.sh jobline_no nodes_per_job queues_per_step [quiet]
#
# Description: prepares the todolists for the queues from the ../../workflow/ligand-collections/todo/todo.all file by distributing the collections
#
# Option: quiet (optional)
#    Possible values: 
#        quiet: No information is displayed on the screen.
#
# Revision history:
# 2015-12-16  Created (version 2.1)
# 2016-07-16  Various improvements
#
# ---------------------------------------------------------------------------

# Displaying help if the first argument is -h
usage="Usage: . prepare-todolists.sh jobline_no nodes_per_job queues_per_step [quiet]"
if [ "${1}" = "-h" ]; then
    echo "${usage}"
    return
fi

# Variables
queue_no_1="${1}"
nodes_per_job="${2}"
queues_per_step="${3}"

# Hiding the todo.all list
status="false";
k="1"
if [ ! -d /tmp/${USER}/${jobline_no}/prepare-todolists/ ]; then
    mkdir -p /tmp/${USER}/${jobline_no}/prepare-todolists/
fi
while [ "${status}" = "false" ]; do
    if mv ../../workflow/ligand-collections/todo/todo.all /tmp/${USER}/ 2>/dev/null; then
        status="true"
    else
        echo "The ligand-collections/todo/todo.all file does not exist (trial ${k})."
        sleep "$(shuf -i 5-10 -n1).$(shuf -i 0-9 -n1)"

        if [ "${k}" = "1000" ]; then
            echo "Reached iteration 1000. This seems to be hopeless. Stopping the refilling process."
            exit 1
        fi
        k=$((k + 1))  
    fi      
done

# Removing empty lines
grep '[^[:blank:]]' < /tmp/${USER}/todo.all > /tmp/${USER}/todo.all.tmp
mv /tmp/${USER}/todo.all.tmp /tmp/${USER}/todo.all

# Variables
line=$(cat ../${controlfile} | grep "collection_folder=" | sed 's/\/$//g')
collection_folder=${line/"collection_folder="}

# Getting the number of ligands todo per queue
line=$(cat ../${controlfile} | grep "ligands_todo_per_queue=")
ligands_todo_per_queue=${line/"ligands_todo_per_queue="}

# Getting the number of ligands per refilling step
line=$(cat ../${controlfile} | grep "ligands_per_refilling_step=")
ligands_per_refilling_step=${line/"ligands_per_refilling_step="}
# Displaying some information
if [[ ! "$*" = *"quiet"* ]]; then
    echo
fi

# Copying the length file to tmp
length_file="../${collection_folder}.length.all"
length_file_temp="/tmp/${USER}/${jobline_no}/prepare-todolists/length.all"
cp "${length_file}" "${length_file_temp}"

# Getting the number of ligands which are already in the local todo lists
ligands_todo=""
for queue_no_2 in $(seq 1 ${nodes_per_job}); do
    # Loop for each queue of the node
    for queue_no_3 in $(seq 1 ${queues_per_step}); do
        queue_no="${queue_no_1}-${queue_no_2}-${queue_no_3}"
        ligands_todo[${queue_no_2}0000${queue_no_3}]=0
        # Getting the current number of the ligands todo
        if [ -f "../../workflow/ligand-collections/todo/${queue_no}" ]; then
            for queue_collection in $(cat ../../workflow/ligand-collections/todo/${queue_no}); do
                ligands_todo[${queue_no_2}0000${queue_no_3}]=$((ligands_todo[${queue_no_2}0000${queue_no_3}] + $(fgrep "${queue_collection} " ${length_file_temp} | awk '{print $2}') ))
            done
        else             
            # If no local todo list exists create one
            touch ../../workflow/ligand-collections/todo/${queue_no}
        fi
        if [ -f "../../workflow/ligand-collections/current/${queue_no}" ]; then
            for queue_collection in $(cat ../../workflow/ligand-collections/current/${queue_no}); do
                ligands_todo[${queue_no_2}0000${queue_no_3}]=$((ligands_todo[${queue_no_2}0000${queue_no_3}] + $(fgrep "${queue_collection} " ${length_file_temp} | awk '{print $2}') - $(wc -l ../../workflow/ligand-collections/ligand-lists/$(basename ${queue_collection} .txt).status | awk -F ' ' '{print $1	}') ))
            done
        fi
    done
done

# Printing some infos about the todo lists of this queue before the refilling
if [[ ! "$*" = *"quiet"* ]]; then
    echo
    echo "Starting the (re)filling of the todolists of the queues."
    echo
    for queue_no_2 in $(seq 1 ${nodes_per_job}); do
        # Loop for each queue of the node
        for queue_no_3 in $(seq 1 ${queues_per_step}); do
            queue_no="${queue_no_1}-${queue_no_2}-${queue_no_3}"
            echo "Before (re)filling the todolists the queue ${queue_no} had ${ligands_todo[${queue_no_2}0000${queue_no_3}]} ligands todo distributed in $(cat ../../workflow/ligand-collections/todo/${queue_no} ../../workflow/ligand-collections/current/${queue_no} 2>/dev/null | grep -c "[^[:blank:]]") collections."
        done
    done
    echo
fi

# Loop for each refilling step 
no_of_refilling_steps="$((${ligands_todo_per_queue} / ${ligands_per_refilling_step}))"
for refill_step in $(seq 1 ${no_of_refilling_steps}); do
    step_limit=$((${refill_step} * ${ligands_per_refilling_step}))
    # Loop for each node
    for queue_no_2 in $(seq 1 ${nodes_per_job}); do
        # Loop for each queue of the node
        for queue_no_3 in $(seq 1 ${queues_per_step}); do
            queue_no="${queue_no_1}-${queue_no_2}-${queue_no_3}"              
            while [ "${ligands_todo[${queue_no_2}0000${queue_no_3}]}" -le "${step_limit}" ]; do
                # Checking if there is one more ligand collection to be done
                no_collections_remaining="$(grep -cv '^\s*$' /tmp/${USER}/todo.all || true)"
                if [[ "${no_collections_remaining}" -eq "0" ]]; then
                # Displaying some information
                    if [[ ! "$*" = *"quiet"* ]]; then
                        echo "There is no more ligand collection in the todo.all file. Stopping the refilling procedure."
                        echo
                    fi
                    break 4
                fi                    
                # Setting some variables
                next_ligand_collection="$(head -n 1 /tmp/${USER}/todo.all)"
                next_ligand_collection_basename=${next_ligand_collection/.*}
                if grep "${next_ligand_collection}" ../../workflow/ligand-collections/done/* 2>/dev/null; then
                    if [[ ! "$*" = *"quiet"* ]]; then
                        echo "This ligand collection was already finished. Trying the next ligand collection."
                    fi                    
                else
                    echo "${next_ligand_collection}" >> ../../workflow/ligand-collections/todo/${queue_no}
                    ligands_todo[${queue_no_2}0000${queue_no_3}]=$(( ${ligands_todo[${queue_no_2}0000${queue_no_3}]} + $(fgrep "${next_ligand_collection} " ${length_file_temp} | awk '{print $2}') ))
                fi
                # Removing the new collection from the ligand-collections-todo file
                sed -i "/${next_ligand_collection}/d" /tmp/${USER}/todo.all
            done         
        done
    done
done

# Printing some infos about the todo lists of this queue after the refilling
if [[ ! "$*" = *"quiet"* ]]; then
    for queue_no_2 in $(seq 1 ${nodes_per_job}); do
        # Loop for each queue of the node
        for queue_no_3 in $(seq 1 ${queues_per_step}); do
            queue_no="${queue_no_1}-${queue_no_2}-${queue_no_3}"
            echo "After (re)filling the todolists the queue ${queue_no} has ${ligands_todo[${queue_no_2}0000${queue_no_3}]} ligands todo distributed in $(cat ../../workflow/ligand-collections/todo/${queue_no} ../../workflow/ligand-collections/current/${queue_no} 2>/dev/null | grep -c "[^[:blank:]]") collections."
        done
    done
fi

# Moving the todo.all file to its original place
mv /tmp/${USER}/todo.all  ../../workflow/ligand-collections/todo/

# Displaying some information
if [[ ! "$*" = *"quiet"* ]]; then
    echo
    echo "The todo lists for the queues were (re)filled."
    echo
fi
